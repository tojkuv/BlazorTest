@page "/editclient/{id:int}"
@using BlazorApp.Entities
@inject NavigationManager Navigation
@inject HttpClient HttpClient
@rendermode InteractiveServer

<h3>@(Client.Id == 0 ? "Add Client" : "Edit Client")</h3>

<EditForm OnValidSubmit="SaveClient" Model="Client">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="mb-3">
        <label class="form-label">Name</label>
        <input class="form-control" @bind="Client.Name"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Email</label>
        <input class="form-control" @bind="Client.Email"/>
    </div>

    <div class="mb-3">
        <label class="form-label">Phone</label>
        <input class="form-control" @bind="Client.Phone"/>
    </div>

    <button type="submit" class="btn btn-success">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }

    private Client Client { get; set; } = new Client();

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            var existingClient = await HttpClient.GetFromJsonAsync<Client>($"api/clients/{Id}");

            if (existingClient != null)
            {
                Client = existingClient;
            }
        }
    }

    private async Task SaveClient()
    {
        if (Client.Id == 0)
        {
            var response = await HttpClient.PostAsJsonAsync("api/clients", Client);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/clients");
            }
        }
        else
        {
            var response = await HttpClient.PutAsJsonAsync($"api/clients/{Client.Id}", Client);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/clients");
            }
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/clients");
    }
}
